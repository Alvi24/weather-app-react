/*use position absolute and right,left,top,bottom to flow the element out of page*/
/* #root and .App can be styled only inline not from a module */
body {
  width: 100vw;
  height: 100vh;
  /* background-color: rgb(100, 189, 189); */
  background-color: rgb(100, 189, 219);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  backdrop-filter: blur(10px);
  margin: 0;
  padding: 0;
}

.Body {
  position: relative;
  min-width: 90%;
  min-height: 100px;
  margin: 0;
  transition: 0.5s;
}
.Body * {
  margin: 0;
  box-sizing: border-box;
  color: black;
  transition: filter 0.5s;
}
/* .Body > :not(.Hero) {
  align-self: auto;
} */
/*SearchBar.jsx*/

.searchBar {
  position: relative;
  z-index: 1;
  background-color: white;
  width: 300px;
  height: 30px;
  transform: translate(20%, 60%);
  /* margin-inline-start: 10%; */
}
.searchBar input {
  margin-right: auto; /*overide justify content on parent*/
  width: 10%;
  height: 100%;
  border-radius: 20px;
  background-color: red;
  outline: transparent;
  border: none;
  transition: 0.5s;
}
.searchBar input:hover,
.searchBar input:focus,
.searchBar input:not(:placeholder-shown) {
  width: 100%;
}
.searchBar .noLocationFoundText {
  font-size: 1.8em;
  position: absolute;
  transform: translate(10%);
}
table {
  position: absolute;
  display: none;
  top: 35px;
  left: 0;
  background-color: white;
}

input:focus ~ table:has(.location),
table:has(tr:active) {
  /* tr:active when a location is clicked*/
  z-index: 2;
 
  display: inline-block;
}
tr img {
  width: 50px;
  height: 30px;
}
.location:hover {
  cursor: pointer;
  background-color: red;
}
.Hero {
  width: 60px;
  width: clamp(600px, 8vw, 200px);
  transition: filter 0.5s;
  background: rgba(216, 216, 216, 0.3);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.2);
  backdrop-filter: blur(4.1px);
  -webkit-backdrop-filter: blur(4.1px);
  border: 1px solid rgba(216, 216, 216, 0.65);
  transform: translateY(70%);
  margin-inline-start: auto;
  margin-inline-end: auto;

  /* box-shadow: 0 0 8px 8px rgb(100, 189, 219) inset; */ /*faded edges*/
}
.mainWeatherInfo {
  width: 100%;
  display: inline-flex;
  align-items: center;
  background-color: red;
}
.mainWeatherInfo p {
  display: inline-block;
}
.currentLocationAndTime {
  display: inline-flex;
  flex-direction: column;
  width: fit-content;
  margin-inline-start: 20px;
  background-color: green;
}
.currentLocationAndTime p {
  font-size: 1.3em;
}
.currentLocationAndTime p svg {
  height: 2.2vh;
}
:global(.blur) {
  filter: blur(2px);
  pointer-events: none; /*disable hovering selecting and other interactable things*/
}
:global(.blur) * {
  user-select: none; /*make the elements behind unselectable*/
}
.tempIcon {
  font-size: 3rem;
}
.tempIcon > path {
  fill: red;
}
.heroTemp {
  width: fit-content;
  font-size: 4.5em;
  padding-right: 2%;
  border-image: linear-gradient(to top, rgba(255, 255, 255, 0.7), transparent) 2;
  border-right: 3px solid;
}
@media (max-width: 800px) {
  :global(.blur) {
    filter: blur(20px);
  }
}
@media (max-width: 700px) {
  .Hero {
    flex: 0 0 auto; /*display flex of parent(.Body) dictates the width of child width, adding this property removes its dependency*/
    width: 90%;

    background-color: rgb(114, 94, 94);
  }
  .searchBar {
    background-color: black;
  }
}
@media (max-width: 500px) {
  .Hero {
    flex: 0 0 auto; /*display flex of parent(.Body) dictates the width of child width, adding this property removes its dependency*/
    width: 90%;

    background-color: rgb(114, 94, 94);
  }
  .searchBar {
    background-color: black;
    right: 10%;
    width: 70%;
  }
}
